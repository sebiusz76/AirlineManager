@model AirlineManager.Models.Domain.AppConfiguration

@{
	ViewData["Title"] = "Edit Configuration";
}

<div class="d-flex justify-content-between align-items-center mb-3">
	<h1>Edit Configuration</h1>
	<a asp-action="Index" asp-route-category="@Model.Category" class="btn btn-secondary">
		Back to List
	</a>
</div>

<div class="row">
	<div class="col-md-8">
		<div class="card">
			<div class="card-header">
				<strong>@Model.Key</strong>
				<span class="badge bg-primary ms-2">@Model.Category</span>
				@if (Model.IsEncrypted)
				{
					<span class="badge bg-warning ms-2">
						<i class="bi bi-lock-fill"></i> Encrypted
					</span>
				}
			</div>
			<div class="card-body">
				<form asp-action="Edit" method="post" data-ajax="true" data-track-changes="true">
					@Html.AntiForgeryToken()
					<input type="hidden" asp-for="Id" />
					<input type="hidden" asp-for="Key" />
					<input type="hidden" asp-for="Category" />
					<input type="hidden" asp-for="IsEncrypted" />

					<div class="mb-3">
						<label class="form-label">Key</label>
						<input type="text" class="form-control" value="@Model.Key" disabled />
						<small class="text-muted">Configuration key (read-only)</small>
					</div>

					<div class="mb-3">
						<label asp-for="Value" class="form-label"></label>
						@if (Model.IsEncrypted)
						{
							<input asp-for="Value" type="password" class="form-control" placeholder="Enter new value or leave empty to keep current" />
							<small class="text-muted">
								<i class="bi bi-info-circle"></i> This value is encrypted. Enter a new value to update, or leave empty to keep the current encrypted value.
							</small>
						}
						else if (Model.Key == "Theme_Default")
						{
							<select asp-for="Value" class="form-select" id="Theme_Default">
								<option value="auto" selected="@(Model.Value == "auto")">
									🔄 Auto (Follow System Preference)
								</option>
								<optgroup label="Light Themes">
									<option value="light" selected="@(Model.Value == "light")">
										☀️ Light (Soft) - Warm & comfortable
									</option>
									<option value="light-crisp" selected="@(Model.Value == "light-crisp")">
										🌞 Light (Crisp) - Professional & sharp
									</option>
									<option value="light-warm" selected="@(Model.Value == "light-warm")">
										🌅 Light (Warm) - Cozy & inviting
									</option>
								</optgroup>
								<optgroup label="Dark Themes">
									<option value="dark" selected="@(Model.Value == "dark")">
										🌙 Dark (Soft) - Warm & easy on eyes
									</option>
									<option value="dark-slate" selected="@(Model.Value == "dark-slate")">
										🌟 Dark (Slate) - Professional & neutral
									</option>
									<option value="dark-midnight" selected="@(Model.Value == "dark-midnight")">
										🌚 Dark (Midnight) - Modern tech style
									</option>
								</optgroup>
							</select>
							<small class="text-muted">
								<i class="bi bi-info-circle"></i> This sets the default theme for new users and guests. 
								Users can override this in their profile settings and choose from <strong>3 light variants</strong> and <strong>3 dark variants</strong>.
							</small>
						}
						else if (Model.Key.Contains("Port") || Model.Key.Contains("Timeout"))
						{
							<input asp-for="Value" type="number" class="form-control" />
						}
						else if (Model.Key.Contains("Enable") || Model.Key.Contains("SSL") || Model.Key.Contains("TLS") || Model.Key.Contains("_Mode_"))
						{
							<select asp-for="Value" class="form-select">
								<option value="true">True</option>
								<option value="false">False</option>
							</select>
						}
						else if (Model.Value.Length > 100)
						{
							<textarea asp-for="Value" class="form-control" rows="4"></textarea>
						}
						else
						{
							<input asp-for="Value" type="text" class="form-control" />
						}
						<span asp-validation-for="Value" class="text-danger"></span>
					</div>

					<div class="mb-3">
						<label asp-for="Description" class="form-label"></label>
						<textarea asp-for="Description" class="form-control" rows="2"></textarea>
						<span asp-validation-for="Description" class="text-danger"></span>
					</div>

					<div class="alert alert-info">
						<strong>Last Modified:</strong> @Model.LastModified.ToLocalTime().ToString("yyyy-MM-dd HH:mm:ss")
						@if (!string.IsNullOrEmpty(Model.LastModifiedBy))
						{
							<text> by @Model.LastModifiedBy</text>
						}
					</div>

					<div class="d-grid gap-2">
						<button type="submit" class="btn btn-primary">
							<i class="bi bi-save"></i> Save Configuration
						</button>
						<a asp-action="Index" asp-route-category="@Model.Category" class="btn btn-outline-secondary">
							Cancel
						</a>
					</div>
				</form>
			</div>
		</div>
	</div>

	<div class="col-md-4">
		<div class="card">
			<div class="card-header">
				<strong>Configuration Info</strong>
			</div>
			<div class="card-body">
				<dl>
					<dt>Category</dt>
					<dd><span class="badge bg-primary">@Model.Category</span></dd>

					<dt>Encryption</dt>
					<dd>
						@if (Model.IsEncrypted)
						{
							<span class="badge bg-warning">
								<i class="bi bi-lock-fill"></i> Encrypted
							</span>
						}
						else
						{
							<span class="badge bg-secondary">
								<i class="bi bi-unlock"></i> Plain Text
							</span>
						}
					</dd>

					<dt>Key</dt>
					<dd><code>@Model.Key</code></dd>
				</dl>

				@if (Model.Category == "SMTP")
				{
					<div class="alert alert-warning">
						<strong>SMTP Configuration</strong><br>
						<small>
							After updating SMTP settings, use the "Test SMTP" button on the main configuration page to verify the settings work correctly.
						</small>
					</div>
				}

				@if (Model.Category == "Theme")
				{
					<div class="alert alert-info">
						<strong><i class="bi bi-palette"></i> Theme Settings</strong><br>
						<small>
							<ul class="mb-0 mt-2">
								<li><strong>Auto:</strong> Follows user's system preference</li>
								<li class="mt-2"><strong>Light Variants:</strong></li>
								<ul>
									<li><strong>Soft:</strong> Warm & comfortable (default light)</li>
									<li><strong>Crisp:</strong> Professional & sharp</li>
									<li><strong>Warm:</strong> Cozy & inviting</li>
								</ul>
								<li class="mt-2"><strong>Dark Variants:</strong></li>
								<ul>
									<li><strong>Soft:</strong> Warm, easy on eyes (recommended)</li>
									<li><strong>Slate:</strong> Professional, neutral gray</li>
									<li><strong>Midnight:</strong> Modern tech style, high contrast</li>
								</ul>
							</ul>
							<div class="mt-2 p-2 bg-light rounded">
								<i class="bi bi-lightbulb"></i> <strong>Tip:</strong> Users can override this setting in their profile 
								and choose from <strong>6 theme variants</strong> (3 light + 3 dark).
							</div>
						</small>
					</div>
				}
			</div>
		</div>
	</div>
</div>

@section Scripts {
	<partial name="_ValidationScriptsPartial" />
	
	@if (Model.Key == "Theme_Default")
	{
		<script src="~/js/views/Admin/Configuration/Edit.js" asp-append-version="true"></script>
	}
}
