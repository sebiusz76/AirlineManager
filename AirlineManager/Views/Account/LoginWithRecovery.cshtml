@model AirlineManager.Models.ViewModel.TwoFactorRecoveryViewModel

@{
	ViewData["Title"] = "Recovery Code Login";
}

@section Styles {
	<link rel="stylesheet" href="~/css/views/Account/LoginWithRecovery.css" asp-append-version="true" />
}

<div class="auth-container">
	<div class="container py-5">
		<div class="row justify-content-center">
			<div class="col-lg-5 col-md-7">
				<!-- Recovery Code Card -->
				<div class="auth-card card border-0 shadow-lg">
					<!-- Header with gradient -->
					<div class="auth-header auth-header-warning-gradient text-white text-center py-4">
						<div class="mb-3">
							<i class="bi bi-life-preserver auth-header-icon"></i>
						</div>
						<h2 class="fw-bold mb-2">Recovery Code Login</h2>
						<p class="mb-0 opacity-75">Use your backup recovery code</p>
					</div>

					<div class="card-body p-4 p-md-5">
						@if (TempData["ServerLog"] != null)
						{
							<div class="alert alert-warning rounded-3 mb-4">
								<i class="bi bi-exclamation-triangle me-2"></i>@TempData["ServerLog"]
							</div>
						}

						<div class="alert alert-info rounded-3 mb-4">
							<div class="d-flex align-items-start">
								<i class="bi bi-info-circle-fill me-3 mt-1" style="font-size: 1.5rem;"></i>
								<div>
									<strong class="d-block mb-2">Recovery Code Required</strong>
									<p class="mb-0 small">
										Enter one of the recovery codes you saved when you enabled two-factor authentication.
										Each recovery code can only be used once.
									</p>
								</div>
							</div>
						</div>

						<div class="alert alert-warning rounded-3 mb-4">
							<div class="d-flex align-items-start">
								<i class="bi bi-shield-exclamation me-3 mt-1" style="font-size: 1.5rem;"></i>
								<div>
									<strong class="d-block mb-2">Security Notice</strong>
									<p class="mb-0 small">
										After using a recovery code, you should generate new codes as soon as possible.
										You can do this in your profile settings after logging in.
									</p>
								</div>
							</div>
						</div>

						<form asp-action="LoginWithRecovery" method="post">
							@Html.AntiForgeryToken()
							<div asp-validation-summary="ModelOnly" class="alert alert-danger rounded-3 mb-4"></div>

							<!-- Recovery Code Input -->
							<div class="mb-4">
								<label asp-for="RecoveryCode" class="form-label fw-bold d-flex align-items-center">
									<i class="bi bi-key-fill me-2 text-warning"></i>
									<span>Recovery Code</span>
								</label>
								<input asp-for="RecoveryCode"
									   class="form-control form-control-lg text-center recovery-code-input"
									   placeholder="XXXX-XXXX-XXXX"
									   autocomplete="off"
									   autofocus />
								<span asp-validation-for="RecoveryCode" class="text-danger small"></span>
								<div class="mt-2">
									<small class="text-muted d-block">
										<i class="bi bi-info-circle me-1"></i>
										Recovery codes are case-insensitive and may contain dashes or spaces
									</small>
									<small class="text-muted d-block mt-1">
										<i class="bi bi-shield-check me-1"></i>
										Find your codes in a secure location where you saved them
									</small>
								</div>
							</div>

							<input type="hidden" asp-for="ReturnUrl" />
							<input type="hidden" asp-for="UserId" />

							<!-- Login Button -->
							<div class="d-grid gap-2 mb-4">
								<button type="submit" class="btn btn-lg text-white btn-gradient-warning">
									<i class="bi bi-unlock-fill me-2"></i>Log In with Recovery Code
								</button>
							</div>

							<!-- Divider -->
							<div class="position-relative mb-4">
								<hr class="text-muted" />
								<span class="position-absolute top-50 start-50 translate-middle bg-white px-3 text-muted small">
									OR
								</span>
							</div>

							<!-- Back to Authenticator Link -->
							<div class="text-center">
								<div class="mb-3">
									<i class="bi bi-smartphone text-primary" style="font-size: 2rem;"></i>
								</div>
								<p class="text-muted mb-2">
									<strong>Have access to your authenticator app?</strong>
								</p>
								<p class="text-muted small mb-3">
									If you've regained access to your device, use your authenticator code instead
								</p>
								<a asp-action="LoginWith2fa"
								   asp-route-returnUrl="@Model.ReturnUrl"
								   asp-route-userId="@Model.UserId"
								   class="btn btn-outline-primary">
									<i class="bi bi-arrow-left me-2"></i>Back to Authenticator Code
								</a>
							</div>
						</form>
					</div>
				</div>

				<!-- Back to Login -->
				<div class="text-center mt-4">
					<a asp-action="Login" class="text-decoration-none text-muted">
						<i class="bi bi-arrow-left me-1"></i>Back to Login
					</a>
				</div>
			</div>
		</div>
	</div>
</div>

@section Scripts {
	<partial name="_ValidationScriptsPartial" />
	<script>
		// Enhanced recovery code input handling
		(function() {
			const recoveryInput = document.querySelector('input[name="RecoveryCode"]');
			if (!recoveryInput) return;

			// Auto-format recovery code (uppercase, preserve dashes)
			recoveryInput.addEventListener('input', function(e) {
				// Convert to uppercase and trim
				let value = e.target.value.toUpperCase().trim();
				e.target.value = value;

				// Visual feedback when code looks valid (contains alphanumeric)
				if (value.length >= 8 && /^[A-Z0-9-]+$/.test(value)) {
					e.target.classList.add('is-valid');
					e.target.classList.remove('is-invalid');
				} else if (value.length > 0) {
					e.target.classList.remove('is-valid');
					e.target.classList.add('is-invalid');
				} else {
					e.target.classList.remove('is-valid', 'is-invalid');
				}
			});

			// Paste handler to clean up pasted recovery codes
			recoveryInput.addEventListener('paste', function(e) {
				setTimeout(() => {
					let value = e.target.value.toUpperCase().trim();
					// Remove multiple spaces
					value = value.replace(/\s+/g, ' ');
					e.target.value = value;

					// Trigger validation
					if (value.length >= 8 && /^[A-Z0-9-]+$/.test(value)) {
						e.target.classList.add('is-valid');
						e.target.classList.remove('is-invalid');
					}
				}, 10);
			});

			// Focus effect - select all text
			recoveryInput.addEventListener('focus', function() {
				this.select();
			});

			// Prevent special characters except dash and space
			recoveryInput.addEventListener('keypress', function(e) {
				const char = e.key;
				// Allow: alphanumeric, dash, space, backspace, delete, tab
				if (!/[a-zA-Z0-9\s-]/.test(char) && 
					!['Backspace', 'Delete', 'Tab', 'ArrowLeft', 'ArrowRight'].includes(e.key)) {
					e.preventDefault();
				}
			});

			// Helper text animation
			const helperTexts = recoveryInput.parentElement.querySelectorAll('small');
			helperTexts.forEach((text, index) => {
				text.style.animation = `slideInDown 0.5s ease-out ${0.1 * (index + 1)}s both`;
			});
		})();
	</script>
}
