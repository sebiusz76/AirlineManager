@model AirlineManager.Models.ViewModel.TwoFactorLoginViewModel

@{
	ViewData["Title"] = "Two-Factor Authentication";
}

@section Styles {
	<link rel="stylesheet" href="~/css/views/Account/LoginWith2fa.css" asp-append-version="true" />
}

<div class="auth-container">
	<div class="container py-5">
		<div class="row justify-content-center">
			<div class="col-lg-5 col-md-7">
				<!-- 2FA Card -->
				<div class="auth-card card border-0 shadow-lg">
					<!-- Header with gradient -->
					<div class="auth-header auth-header-gradient text-white text-center py-4">
						<div class="mb-3">
							<i class="bi bi-shield-lock auth-header-icon"></i>
						</div>
						<h2 class="fw-bold mb-2">Two-Factor Authentication</h2>
						<p class="mb-0 opacity-75">Secure your login with 2FA</p>
					</div>

					<div class="card-body p-4 p-md-5">
						@if (TempData["ServerLog"] != null)
						{
							<div class="alert alert-warning rounded-3 mb-4">
								<i class="bi bi-exclamation-triangle me-2"></i>@TempData["ServerLog"]
							</div>
						}

						<div class="alert alert-info rounded-3 mb-4">
							<div class="d-flex align-items-start">
								<i class="bi bi-info-circle-fill me-3 mt-1" style="font-size: 1.5rem;"></i>
								<div>
									<strong class="d-block mb-2">Authenticator Code Required</strong>
									<p class="mb-0 small">
										Open your authenticator app (Google Authenticator, Microsoft Authenticator, or Authy) 
										and enter the 6-digit code to continue. Codes refresh every 30 seconds.
									</p>
								</div>
							</div>
						</div>

						<form asp-action="LoginWith2fa" method="post">
							@Html.AntiForgeryToken()
							<div asp-validation-summary="ModelOnly" class="alert alert-danger rounded-3 mb-4"></div>

							<!-- 2FA Code Input -->
							<div class="mb-4">
								<label asp-for="TwoFactorCode" class="form-label fw-bold d-flex align-items-center">
									<i class="bi bi-key-fill me-2 text-primary"></i>
									<span>Authentication Code</span>
								</label>
								<input asp-for="TwoFactorCode"
									   class="form-control form-control-lg text-center twofa-code-input"
									   placeholder="000000"
									   autocomplete="one-time-code"
									   inputmode="numeric"
									   maxlength="6"
									   pattern="[0-9]{6}"
									   autofocus />
								<span asp-validation-for="TwoFactorCode" class="text-danger small"></span>
								<div class="d-flex align-items-center justify-content-between mt-2">
									<small class="text-muted">
										<i class="bi bi-clock me-1"></i>Codes expire every 30 seconds
									</small>
									<small class="text-muted">
										<i class="bi bi-shield-check me-1"></i>Secure
									</small>
								</div>
							</div>

							<!-- Remember Machine -->
							<div class="mb-4">
								<div class="form-check d-flex align-items-center">
									<input asp-for="RememberMachine" class="form-check-input me-2" type="checkbox" id="rememberMachine" />
									<label asp-for="RememberMachine" class="form-check-label" for="rememberMachine">
										<strong>Trust this device for 30 days</strong>
									</label>
								</div>
								<small class="text-muted d-block mt-2 ms-4">
									<i class="bi bi-exclamation-triangle me-1"></i>
									Only check this on your personal, secure devices
								</small>
							</div>

							<input type="hidden" asp-for="ReturnUrl" />
							<input type="hidden" asp-for="RememberMe" />
							<input type="hidden" asp-for="UserId" />

							<!-- Verify Button -->
							<div class="d-grid gap-2 mb-4">
								<button type="submit" class="btn btn-lg text-white btn-gradient-primary">
									<i class="bi bi-check-circle-fill me-2"></i>Verify & Continue
								</button>
							</div>

							<!-- Divider -->
							<div class="position-relative mb-4">
								<hr class="text-muted" />
								<span class="position-absolute top-50 start-50 translate-middle bg-white px-3 text-muted small">
									Having trouble?
								</span>
							</div>

							<!-- Recovery Code Link -->
							<div class="text-center">
								<div class="mb-3">
									<i class="bi bi-life-preserver text-warning" style="font-size: 2rem;"></i>
								</div>
								<p class="text-muted mb-2">
									<strong>Lost access to your authenticator app?</strong>
								</p>
								<p class="text-muted small mb-3">
									Use one of your backup recovery codes to sign in
								</p>
								<a asp-action="LoginWithRecovery"
								   asp-route-returnUrl="@Model.ReturnUrl"
								   asp-route-userId="@Model.UserId"
								   class="btn btn-outline-warning">
									<i class="bi bi-unlock-fill me-2"></i>Use a Recovery Code
								</a>
							</div>
						</form>
					</div>
				</div>

				<!-- Back to Login -->
				<div class="text-center mt-4">
					<a asp-action="Login" class="text-decoration-none text-muted">
						<i class="bi bi-arrow-left me-1"></i>Back to Login
					</a>
				</div>
			</div>
		</div>
	</div>
</div>

@section Scripts {
	<partial name="_ValidationScriptsPartial" />
	<script>
		// Enhanced 2FA code input handling
		(function() {
			const codeInput = document.querySelector('input[name="TwoFactorCode"]');
			if (!codeInput) return;

			// Auto-format 2FA code (remove non-digits)
			codeInput.addEventListener('input', function(e) {
				// Remove non-digits
				let value = e.target.value.replace(/\D/g, '');
				// Limit to 6 digits
				value = value.substring(0, 6);
				e.target.value = value;

				// Visual feedback when 6 digits entered
				if (value.length === 6) {
					e.target.classList.add('is-valid');
					// Optional: auto-submit after a short delay
					// setTimeout(() => e.target.form.submit(), 300);
				} else {
					e.target.classList.remove('is-valid');
				}
			});

			// Paste handler to clean up pasted codes
			codeInput.addEventListener('paste', function(e) {
				setTimeout(() => {
					let value = e.target.value.replace(/\D/g, '');
					value = value.substring(0, 6);
					e.target.value = value;
					
					if (value.length === 6) {
						e.target.classList.add('is-valid');
					}
				}, 10);
			});

			// Focus effect
			codeInput.addEventListener('focus', function() {
				this.select();
			});

			// Prevent non-numeric input
			codeInput.addEventListener('keypress', function(e) {
				if (!/[0-9]/.test(e.key) && e.key !== 'Backspace' && e.key !== 'Delete' && e.key !== 'Tab') {
					e.preventDefault();
				}
			});

			// Show countdown timer (optional enhancement)
			// This could show time remaining for current TOTP code
			// Implementation would require server-side sync or client estimation
		})();
	</script>
}
